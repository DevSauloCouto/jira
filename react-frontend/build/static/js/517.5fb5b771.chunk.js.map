{"version":3,"file":"static/js/517.5fb5b771.chunk.js","mappings":"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","sources":["api/axios.ts","components/auth/Form.tsx","components/auth/Login.tsx","components/util/InputWithValidation.tsx"],"sourcesContent":["import axios from 'axios';\n\nconst axiosDf = axios.create({\n  baseURL: 'https://jira-clone.onrender.com/',\n  withCredentials: true,\n});\n\nexport default axiosDf;\n","import { AxiosError } from 'axios';\nimport { useState } from 'react';\nimport {\n  FieldError,\n  FieldErrorsImpl,\n  FieldValues,\n  UseFormHandleSubmit,\n  UseFormRegister,\n} from 'react-hook-form';\nimport { APIERROR } from '../../api/apiTypes';\nimport InputWithValidation from '../util/InputWithValidation';\n\ninterface Props {\n  register: UseFormRegister<FieldValues>;\n  errors: FieldErrorsImpl<{\n    [x: string]: any;\n  }>;\n  onSubmit: (body: {}) => Promise<any>;\n  handleSubmit: UseFormHandleSubmit<FieldValues>;\n  type: 'LOGIN' | 'SIGNUP';\n  loading: boolean;\n}\n\nfunction Form(props: Props) {\n  const { register, onSubmit, handleSubmit, errors, loading, type } = props;\n  const [error, setError] = useState('');\n\n  const submit = handleSubmit(async (form) => {\n    try {\n      await onSubmit(form);\n      window.location.replace('http://localhost:3000/project'); //with refresh\n    } catch (error) {\n      setError(((error as AxiosError).response?.data as APIERROR).message);\n    }\n  });\n\n  return (\n    <form onSubmit={submit}>\n      <div className='flex flex-col gap-y-4'>\n        <InputWithValidation\n          label='Email'\n          register={register('email', {\n            required: { value: true, message: 'email must not be empty' },\n            pattern: {\n              value: /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g,\n              message: 'please provide a valid email',\n            },\n          })}\n          error={errors.email as FieldError}\n          inputClass='border-gray-500'\n          autoFocus\n        />\n        {type === 'SIGNUP' && (\n          <InputWithValidation\n            label='Username'\n            register={register('username', {\n              required: { value: true, message: 'username must not be empty' },\n              minLength: { value: 2, message: 'must be at least two characters long' },\n              pattern: { value: /^[A-Za-z0-9_]+$/g, message: 'username can be a-z,A-Z,0-9,_' },\n            })}\n            error={errors.username as FieldError}\n            inputClass='border-gray-500'\n          />\n        )}\n        <InputWithValidation\n          label='Password'\n          register={register('pwd', {\n            required: { value: true, message: 'password must not be empty' },\n            minLength: { value: 4, message: 'must be at least 4 characters long' },\n            maxLength: { value: 14, message: 'must be under 15 characters' },\n          })}\n          error={errors.pwd as FieldError}\n          inputClass='border-gray-500'\n          type='password'\n        />\n      </div>\n      {error && <span className='text-red-400 block mt-3'>{error}</span>}\n      <hr className='border-t-[.5px] border-gray-400 mt-3' />\n      <span className='text-[12px] text-gray-600 block mt-6'>\n        By clicking below, you agree to the our\n        <span className='text-blue-800'> Privacy Policy.</span>\n      </span>\n      <button type='submit' className='btn w-full mt-4 py-2 bg-[#321898]'>\n        {type === 'SIGNUP'\n          ? loading\n            ? 'registering ...'\n            : 'Join now'\n          : loading\n          ? 'logging in ...'\n          : 'Log In'}\n      </button>\n    </form>\n  );\n}\n\nexport default Form;\n","import { FieldValues, useForm } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\nimport axiosDf from '../../api/axios';\nimport Form from './Form';\n\nconst LogIn = () => {\n  const {\n    register,\n    formState: { errors, isSubmitting: loading },\n    handleSubmit,\n  } = useForm();\n\n  return (\n    <div className='bg-white w-[22rem] rounded-md py-12 px-6'>\n      <h3 className='text-center text-gray-800 font-medium text-3xl'>Welcome back</h3>\n      <h4 className='text-center mb-5 text-[15px] text-gray-600'>Free for testing</h4>\n      <Form type='LOGIN' onSubmit={logIn} {...{ errors, handleSubmit, register, loading }} />\n      <div className='flex items-center'>\n        <hr className='border-t-[.5px] grow border-gray-400' />\n        <span className='text-center block my-3 bg-white w-fit px-2'>OR</span>\n        <hr className='border-t-[.5px] grow border-gray-400' />\n      </div>\n      <Link to='/register'>\n        <span className='text-center block text-blue-600 hover:underline'>Join now</span>\n      </Link>\n    </div>\n  );\n};\n\nexport default LogIn;\n\nconst logIn = async (body: FieldValues) => {\n  const result = await axiosDf.post('auth/login', body);\n  return result.data;\n};\n","import { FieldError, UseFormRegisterReturn } from 'react-hook-form';\n\nconst InputWithValidation = (props: Props) => {\n  const {\n    darkEnabled = false,\n    register,\n    error,\n    placeholder,\n    label,\n    defaultValue,\n    readOnly,\n    autoFocus,\n    inputClass,\n    type,\n  } = props;\n  return (\n    <div>\n      <label className={`text-sm tracking-wide ${darkEnabled ? 'text-c-5' : 'text-gray-800'}`}>\n        {label}\n      </label>\n      <input\n        defaultValue={defaultValue ?? ''}\n        className={`block w-full focus:border-chakra-blue mt-2 px-3 rounded-sm text-sm py-[3px] border-2 duration-200 outline-none ${\n          darkEnabled\n            ? 'hover:bg-c-7 focus:bg-c-1 bg-c-6 text-c-text'\n            : 'bg-slate-100 hover:border-gray-400'\n        } ${inputClass ?? ' border-transparent'} ${readOnly ? 'pointer-events-none' : ''}`}\n        {...{ placeholder, readOnly, autoFocus, type }}\n        {...register}\n      />\n      <span className='text-[13px] text-red-400'>{error?.message?.toString()}</span>\n    </div>\n  );\n};\n\nexport default InputWithValidation;\n\ntype Props = {\n  register: UseFormRegisterReturn;\n  error: FieldError;\n  placeholder?: string;\n  label: string;\n  defaultValue?: string;\n  readOnly?: boolean;\n  autoFocus?: boolean;\n  darkEnabled?: boolean;\n  inputClass?: string;\n  type?: string;\n};\n"],"names":["axiosDf","axios","baseURL","withCredentials","props","register","onSubmit","handleSubmit","errors","loading","type","useState","error","setError","submit","form","window","location","replace","response","data","message","className","label","required","value","pattern","email","inputClass","autoFocus","minLength","username","maxLength","pwd","useForm","formState","isSubmitting","logIn","to","body","result","darkEnabled","placeholder","defaultValue","readOnly","toString"],"sourceRoot":""}