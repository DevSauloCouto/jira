{"version":3,"file":"static/js/627.90e8d880.chunk.js","mappings":"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","sources":["api/auth.endpoint.ts","api/axios.ts","api/member.endpoint.ts","api/project.endpoint.ts","components/home/Breadcrumbs.tsx","components/util/BtnWithIcon.tsx","components/home/Menubar.tsx","components/home/CreateProjectModel.tsx","components/home/ProjectRow.tsx","components/home/ProjectCatalog.tsx","components/util/IconBtn.tsx","components/home/Sidebar.tsx","components/home/Home.tsx","components/util/InputWithValidation.tsx","components/util/Item.tsx","components/util/Model.tsx","components/util/WithLabel.tsx"],"sourcesContent":["import { api } from './api';\nimport { AuthUser, PublicUser, updateAuthUser } from './apiTypes';\n\nexport const extendedApi = api.injectEndpoints({\n  endpoints: (builder) => ({\n    authUser: builder.query<AuthUser, void>({\n      query: () => ({ url: 'user/authUser', credentials: 'include' }),\n      providesTags: ['AuthUser'],\n    }),\n    publicUser: builder.query<PublicUser, number>({\n      query: (id) => ({ url: `user/${id}`, credentials: 'include' }),\n    }),\n    updateAuthUser: builder.mutation<AuthUser, updateAuthUser>({\n      query: (body) => ({\n        url: 'user/authUser/update',\n        method: 'PATCH',\n        body,\n        credentials: 'include',\n      }),\n      invalidatesTags: ['AuthUser'],\n    }),\n  }),\n  overrideExisting: false,\n});\n\nexport const { useAuthUserQuery, useUpdateAuthUserMutation, usePublicUserQuery } = extendedApi;\n\n// selectors\nexport const selectAuthUser = () =>\n  extendedApi.useAuthUserQuery(undefined, {\n    selectFromResult: ({ data }) => ({ authUser: data }),\n  });\n","import axios from 'axios';\n\nconst axiosDf = axios.create({\n  baseURL: 'https://jira-clone.onrender.com/',\n  withCredentials: true,\n});\n\nexport default axiosDf;\n","import { api } from './api';\nimport type { AddMember, Member, RemoveMember } from './apiTypes';\n\nexport const extendedApi = api.injectEndpoints({\n  endpoints: (builder) => ({\n    members: builder.query<Member[], number>({\n      query: (projectId) => ({\n        url: `project/${projectId}/members`,\n        credentials: 'include',\n      }),\n      providesTags: ['Members'],\n    }),\n    removeMember: builder.mutation<void, RemoveMember>({\n      query: (body) => ({\n        url: `member/remove`,\n        method: 'DELETE',\n        body,\n        credentials: 'include',\n      }),\n      invalidatesTags: ['Members'],\n    }),\n    addMember: builder.mutation<void, AddMember>({\n      query: (body) => ({\n        url: `member/add`,\n        method: 'PUT',\n        body,\n        credentials: 'include',\n      }),\n      invalidatesTags: ['Members'],\n    }),\n  }),\n  overrideExisting: false,\n});\n\nexport const { useMembersQuery, useRemoveMemberMutation, useAddMemberMutation } = extendedApi;\n\n// selectors\nexport const selectMembers = (projectId: number) =>\n  extendedApi.useMembersQuery(projectId, {\n    selectFromResult: ({ data }) => ({ members: data }),\n  });\n","import { api } from './api';\nimport type { CreateProject, EditProject, LeaveProject, Project } from './apiTypes';\n\nexport const extendedApi = api.injectEndpoints({\n  endpoints: (builder) => ({\n    projects: builder.query<Project[], number>({\n      query: (userId) => ({ url: `user/${userId}/projects`, credentials: 'include' }),\n      providesTags: ['Project'],\n    }),\n    project: builder.query<Project, number>({\n      query: (projectId) => ({\n        url: 'project/' + projectId,\n        credentials: 'include',\n      }),\n      providesTags: ['Project'],\n    }),\n    createProject: builder.mutation<Project, CreateProject>({\n      query: (body) => ({ url: 'project/create', method: 'POST', body, credentials: 'include' }),\n      invalidatesTags: ['Project'],\n    }),\n    deleteProject: builder.mutation<void, number>({\n      query: (projectId) => ({\n        url: `project/${projectId}/delete`,\n        method: 'DELETE',\n        credentials: 'include',\n      }),\n      invalidatesTags: ['Project'],\n    }),\n    leaveProject: builder.mutation<void, LeaveProject>({\n      query: ({ projectId, ...body }) => ({\n        url: `project/${projectId}/leave`,\n        method: 'DELETE',\n        body,\n        credentials: 'include',\n      }),\n      invalidatesTags: ['Project'],\n    }),\n    updateProject: builder.mutation<void, EditProject>({\n      query: (body) => ({ url: `project/${body.id}`, method: 'PUT', body, credentials: 'include' }),\n      invalidatesTags: ['Project'],\n      async onQueryStarted({ id, ...newData }, { dispatch }) {\n        dispatch(\n          extendedApi.util.updateQueryData('project', id, (oldData) => ({ ...oldData, ...newData }))\n        );\n      },\n    }),\n  }),\n  overrideExisting: false,\n});\n\nexport const {\n  useProjectsQuery,\n  useProjectQuery,\n  useCreateProjectMutation,\n  useUpdateProjectMutation,\n  useLeaveProjectMutation,\n  useDeleteProjectMutation,\n} = extendedApi;\n\n// selectors\nexport const selectCurrentProject = (projectId: number) =>\n  extendedApi.useProjectQuery(projectId, {\n    selectFromResult: ({ data }) => ({ project: data }),\n  });\n","import { ChakraProvider, Breadcrumb, BreadcrumbItem, BreadcrumbLink } from '@chakra-ui/react';\nimport { Icon } from '@iconify/react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useProjectQuery } from '../../api/project.endpoint';\n\nconst Breadcrumbs = () => {\n  const location = useLocation();\n\n  const fragments = location.pathname.slice(1).split('/');\n  const { data: project } = useProjectQuery(Number(fragments[1]) ?? -1);\n\n  return (\n    <ChakraProvider>\n      <div className='mt-8 mb-4 px-10 min-w-max'>\n        <Breadcrumb\n          className='text-c-text'\n          spacing='8px'\n          separator={<Icon className='inline text-xl' icon='ei:chevron-right' />}\n        >\n          {fragments[0] && (\n            <BreadcrumbItem>\n              <Link to='/project/' className='hover:underline'>\n                project\n              </Link>\n            </BreadcrumbItem>\n          )}\n\n          {fragments[1] && (\n            <BreadcrumbItem>\n              <Link to={'/project/' + fragments[1]} className='hover:underline'>\n                {project?.name ?? 'undefined'}\n              </Link>\n            </BreadcrumbItem>\n          )}\n\n          {fragments[2] && (\n            <BreadcrumbItem isCurrentPage>\n              <Link to={`/project/${fragments[1]}/board`} className='hover:underline'>\n                Kanban board\n              </Link>\n            </BreadcrumbItem>\n          )}\n        </Breadcrumb>\n      </div>\n    </ChakraProvider>\n  );\n};\n\nexport default Breadcrumbs;\n\n// project/2/board\n// project/2\n// project\n","import { Icon } from '@iconify/react';\nimport { Link } from 'react-router-dom';\n\ntype Props = { icon: string; text: string; iconSize?: number; to: string };\n\nconst BtnWithIcon = ({ icon, text, iconSize, to }: Props) => {\n  return (\n    <li className='list-none'>\n      <Link\n        to={to}\n        className='flex cursor-pointer items-center rounded-[3px] px-3 py-[10px] text-left text-c-5 duration-200 hover:bg-c-2 active:bg-c-2'\n      >\n        <Icon className='' width={iconSize ?? 22} icon={icon} />\n        <span className='ml-3 text-[15px]'>{text}</span>\n      </Link>\n    </li>\n  );\n};\n\nexport default BtnWithIcon;\n","import { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { Icon } from '@iconify/react';\nimport BtnWithIcon from '../util/BtnWithIcon';\nimport { useProjectQuery } from '../../api/project.endpoint';\nimport { useParams } from 'react-router-dom';\n\nconst Menubar = () => {\n  const projectId = Number(useParams().projectId);\n  const [on, setOn] = useState(true);\n  const { data: project } = useProjectQuery(projectId, { skip: !projectId });\n\n  return (\n    <motion.div\n      initial={{ width: projectId ? 240 : 15 }}\n      animate={{ width: projectId && on ? 240 : 15 }}\n      transition={{ type: 'tween' }}\n      className='relative bg-c-2'\n    >\n      {projectId ? (\n        <div className='h-full w-[15rem] bg-c-2 px-4 py-6'>\n          <div className='flex'>\n            <div className='h-10 w-10 shrink-0 bg-cyan-500'></div>\n            <div className='ml-2 w-40'>\n              <span className='block text-sm font-medium truncate text-c-5'>\n                {project?.name ?? 'loading...'}\n              </span>\n              <span className='text-[13px] text-c-text'>Project Planning</span>\n            </div>\n          </div>\n          <div className='my-5'>\n            <BtnWithIcon to={projectId + '/board'} icon='bi:kanban' text='Kanban Board' />\n            <BtnWithIcon to={projectId + ''} icon='clarity:settings-solid' text='Project Setting' />\n          </div>\n          <hr className='border-t-[.5px] border-gray-400' />\n        </div>\n      ) : null}\n      <button\n        title='Toggle project sidebar'\n        onClick={() => setOn((p) => !p)}\n        className={`group peer absolute -right-[14px] z-[20] top-8 grid h-7 w-7 place-items-center rounded-full border-[1px] border-zinc-text00 bg-c-1 hover:border-secondary hover:bg-secondary ${\n          projectId && project ? '' : 'pointer-events-none'\n        }`}\n      >\n        <Icon\n          className='text-secondary group-hover:text-white'\n          icon={on ? 'fa-solid:angle-left' : 'fa-solid:angle-right'}\n        />\n      </button>\n      <div className='absolute top-0 right-0 h-full w-[2px] bg-c-3 peer-hover:bg-secondary' />\n    </motion.div>\n  );\n};\n\nexport default Menubar;\n","import { useAuthUserQuery } from '../../api/auth.endpoint';\nimport WithLabel from '../util/WithLabel';\nimport Item from '../util/Item';\nimport type { CreateProject } from '../../api/apiTypes';\nimport { useCreateProjectMutation } from '../../api/project.endpoint';\nimport { FieldError, FieldValues, useForm } from 'react-hook-form';\nimport InputWithValidation from '../util/InputWithValidation';\nimport Model from '../util/Model';\n\ninterface Props {\n  onClose: () => void;\n}\n\nconst CreateProjectModel = (props: Props) => {\n  const { onClose } = props;\n  const { data: authUser } = useAuthUserQuery();\n  const [createProject] = useCreateProjectMutation();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, isSubmitting: isLoading },\n  } = useForm();\n\n  const handleCreateProject = async (form: FieldValues) => {\n    if (!authUser) return;\n    try {\n      await createProject({ ...form, userId: authUser.id } as CreateProject);\n      onClose();\n    } catch (err) {}\n  };\n\n  return (\n    <Model onSubmit={handleSubmit(handleCreateProject)} {...{ onClose, isLoading }}>\n      <>\n        <div className='mb-8'>\n          <span className='font-[600] text-[22px] text-c-text'>Create Project</span>\n        </div>\n        <div className='flex flex-col gap-4'>\n          <InputWithValidation\n            label='Project name'\n            placeholder='name of your project'\n            register={register('name', {\n              required: { value: true, message: 'Project name must not be empty' },\n            })}\n            error={errors.name as FieldError}\n            autoFocus\n          />\n          <InputWithValidation\n            label='Short description'\n            placeholder='describe your project in a few words'\n            register={register('descr')}\n            error={errors.descr as FieldError}\n          />\n          <InputWithValidation\n            label='Repository link'\n            placeholder=\"link to the Project's repository\"\n            register={register('repo')}\n            error={errors.repo as FieldError}\n          />\n        </div>\n        {authUser && (\n          <WithLabel label='Members'>\n            <>\n              <div className='bg-c-6 mb-2 py-[2px] px-3 text-sm border-[1px] rounded-sm border-gray-300 text-c-text'>\n                <Item\n                  text={authUser.username}\n                  icon={authUser.profileUrl}\n                  className='w-6 h-6 mr-4 rounded-full object-cover'\n                />\n              </div>\n              <span className='text-sm text-c-text'>\n                * you can add more members after creating the project *\n              </span>\n            </>\n          </WithLabel>\n        )}\n      </>\n    </Model>\n  );\n};\n\nexport default CreateProjectModel;\n","import { Icon } from '@iconify/react';\nimport { lazy, Suspense, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Project } from '../../api/apiTypes';\nimport { usePublicUserQuery } from '../../api/auth.endpoint';\nimport { selectMembers } from '../../api/member.endpoint';\nconst DeleteProject = lazy(() => import('./DeleteProject'));\n\ninterface Props extends Project {\n  idx: number;\n  authUserId: number;\n}\n\nconst ProjectRow = (props: Props) => {\n  const { idx, id, name, descr, repo, userId, authUserId } = props;\n  const { members } = selectMembers(id);\n  const { data: publicUser } = usePublicUserQuery(userId);\n  const [on, setOn] = useState(false);\n  const navigate = useNavigate();\n\n  if (!members) return null;\n\n  const { isAdmin, id: memberId } = members.filter(({ userId: u }) => u === authUserId)[0];\n\n  const handleDelete = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n    setOn(true);\n  };\n\n  return (\n    <div>\n      <div\n        key={id}\n        className='flex border-c-3 border-y-2 relative group border-t-transparent py-1 cursor-pointer hover:border-blue-400 hover:border-t-2'\n        onClick={() => navigate(id + '/board')}\n      >\n        <div className='text-center w-8'>{idx + 1}</div>\n        <div className='grow px-2'>{name}</div>\n        <div className='grow px-2'>{descr}</div>\n        <div className='w-52 px-2'>\n          {publicUser?.username}\n          {isAdmin ? <span className='text-sm ml-1 font-bold'>(you)</span> : ''}\n        </div>\n        <button\n          title='Delete or Leave'\n          onClick={handleDelete}\n          className='icon-btn ml-5 absolute right-0 bg-c-1 hidden group-hover:block'\n        >\n          <Icon icon='bx:trash' className='text-red-500' />\n        </button>\n      </div>\n      {on && publicUser && (\n        <Suspense>\n          <DeleteProject\n            projectId={id}\n            {...{ name, authUserId, memberId, isAdmin }}\n            onClose={() => setOn(false)}\n          />\n        </Suspense>\n      )}\n    </div>\n  );\n};\n\nexport default ProjectRow;\n","import { ChakraProvider as CP, Input, InputGroup, InputLeftElement } from '@chakra-ui/react';\nimport { Icon } from '@iconify/react';\nimport { useState } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { APIERROR } from '../../api/apiTypes';\nimport { selectAuthUser } from '../../api/auth.endpoint';\nimport { useProjectsQuery } from '../../api/project.endpoint';\nimport CreateProjectModel from './CreateProjectModel';\nimport ProjectRow from './ProjectRow';\n\nconst ProjectCatalog = () => {\n  const { authUser } = selectAuthUser();\n  const { data: projects, error } = useProjectsQuery(authUser?.id as number, { skip: !authUser });\n  const [isOpen, setIsOpen] = useState(false);\n\n  if (error && (error as APIERROR).status === 401) return <Navigate to='/login' />;\n\n  if (!authUser) return null;\n  console.log(projects);\n\n  return (\n    <>\n      <div className='bg-c-1 text-c-5 w-full pt-12 px-10 z-10'>\n        <div className='flex justify-between'>\n          <span className='text-2xl tracking-wide font-semibold'>Projects</span>\n          <button onClick={() => setIsOpen(true)} className='btn'>\n            Create Project\n          </button>\n        </div>\n        <div className='mt-8'>\n          <CP>\n            <InputGroup size='sm' minW={160} w={160}>\n              <InputLeftElement children={<Icon width={20} icon='ant-design:search-outlined' />} />\n              <Input size='sm' placeholder='Search projects'></Input>\n            </InputGroup>\n          </CP>\n        </div>\n        <div className='flex mt-4 text-sm font-semibold py-1'>\n          <div className='w-8'></div>\n          <div className='grow px-2 '>Name</div>\n          <div className='grow px-2'>Description</div>\n          <div className='w-52 px-2'>Lead</div>\n        </div>\n        {projects ? (\n          projects.length !== 0 ? (\n            <div className='mt-1 border-t-2 border-c-3'>\n              {projects.map((data, i) => (\n                <ProjectRow key={data.id} idx={i} authUserId={authUser.id} {...data} />\n              ))}\n            </div>\n          ) : (\n            <div className='text-3xl grid place-items-center mt-[30vh]'>\n              You haven't created any project yet!! 🚀\n            </div>\n          )\n        ) : null}\n      </div>\n      {isOpen && <CreateProjectModel onClose={() => setIsOpen(false)} />}\n    </>\n  );\n};\n\nexport default ProjectCatalog;\n","import { Icon } from '@iconify/react';\n\ninterface Props {\n  icon: string;\n  onClick?: () => void;\n  title?: string;\n}\n\nconst IconBtn = (props: Props) => {\n  const { icon, onClick, title } = props;\n\n  return (\n    <button\n      {...{ title, onClick }}\n      className='rounded-full p-[5px] hover:bg-[#4c3fd1] active:bg-chakra-blue'\n    >\n      <Icon className='text-2xl text-white' icon={icon} />\n    </button>\n  );\n};\n\nexport default IconBtn;\n","import { lazy, useState } from 'react';\nimport { Avatar, ChakraProvider as CP, Switch } from '@chakra-ui/react';\nimport { Navigate, useNavigate } from 'react-router-dom';\nimport { motion } from 'framer-motion';\nimport { useAuthUserQuery } from '../../api/auth.endpoint';\nimport IconBtn from '../util/IconBtn';\nimport type { Theme } from '../../utils';\nimport { APIERROR } from '../../api/apiTypes';\nimport axiosDf from '../../api/axios';\nconst Profile = lazy(() => import('./Profile'));\n\ninterface Props {\n  theme: Theme;\n  toggleTheme: () => void;\n}\n\nfunction Sidebar(props: Props) {\n  const {\n    theme: { mode },\n    toggleTheme,\n  } = props;\n  const { data: authUser, error } = useAuthUserQuery();\n  const [isOpen, setIsOpen] = useState(false);\n  const navigate = useNavigate();\n\n  if (error && (error as APIERROR).status === 401) return <Navigate to='/login' />;\n\n  const handleToggle = () => {\n    toggleTheme();\n    localStorage.setItem(\n      'jira-clone-theme',\n      JSON.stringify({\n        mode: mode === 'light' ? 'dark' : 'light',\n      })\n    );\n  };\n\n  const handleLogOut = async () => {\n    await logOut();\n    navigate('/login');\n  };\n\n  return (\n    <div className='flex shrink-0'>\n      <div className='flex flex-col justify-between items-center w-14 py-6 bg-primary'>\n        <div className='flex flex-col gap-y-8'>\n          <button title='Go to Home' onClick={() => navigate('/project')} className='w-8'>\n            <img src='/assets/jira.svg' alt='jira-clone' />\n          </button>\n          {/* <IconBtn icon='ant-design:search-outlined' /> */}\n          {/* <IconBtn icon='ant-design:plus-outlined' /> */}\n          <CP>\n            <Switch title='Toggle Theme' isChecked={mode === 'dark'} onChange={handleToggle} />\n          </CP>\n        </div>\n        <div className='flex flex-col gap-6'>\n          <CP>\n            <Avatar\n              src={authUser?.profileUrl}\n              name={authUser?.username}\n              size='sm'\n              cursor='pointer'\n              border='1px solid white'\n              _hover={{ borderColor: 'tomato' }}\n              onClick={() => setIsOpen((p) => !p)}\n              title='Profile'\n            />\n          </CP>\n          <IconBtn onClick={handleLogOut} icon='charm:sign-out' title='Log Out' />\n        </div>\n      </div>\n      <motion.div\n        initial={{ width: 0 }}\n        animate={{ width: isOpen ? 320 : 0 }}\n        transition={{ type: 'tween' }}\n      >\n        <Profile />\n      </motion.div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n\nasync function logOut() {\n  const result = await axiosDf.post('auth/logout');\n  return result.data;\n}\n","import { Outlet, useOutlet } from 'react-router-dom';\nimport Breadcrumbs from './Breadcrumbs';\nimport Menubar from './Menubar';\nimport ProjectCatalog from './ProjectCatalog';\nimport Sidebar from './Sidebar';\nimport type { Theme } from '../../utils';\n\ninterface Props {\n  theme: Theme;\n  toggleTheme: () => void;\n}\n\nconst Home = (props: Props) => {\n  const { theme, toggleTheme } = props;\n  const outlet = useOutlet();\n\n  return (\n    <>\n      <Sidebar {...{ theme, toggleTheme }} />\n      <Menubar />\n      {outlet ? (\n        <>\n          <main className='z-10 bg-center bg-c-1 overflow-auto grow'>\n            <Breadcrumbs />\n            <Outlet />\n          </main>\n        </>\n      ) : (\n        <ProjectCatalog />\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import { FieldError, UseFormRegisterReturn } from 'react-hook-form';\n\nconst InputWithValidation = (props: Props) => {\n  const {\n    darkEnabled = false,\n    register,\n    error,\n    placeholder,\n    label,\n    defaultValue,\n    readOnly,\n    autoFocus,\n    inputClass,\n    type,\n  } = props;\n  return (\n    <div>\n      <label className={`text-sm tracking-wide ${darkEnabled ? 'text-c-5' : 'text-gray-800'}`}>\n        {label}\n      </label>\n      <input\n        defaultValue={defaultValue ?? ''}\n        className={`block w-full focus:border-chakra-blue mt-2 px-3 rounded-sm text-sm py-[3px] border-2 duration-200 outline-none ${\n          darkEnabled\n            ? 'hover:bg-c-7 focus:bg-c-1 bg-c-6 text-c-text'\n            : 'bg-slate-100 hover:border-gray-400'\n        } ${inputClass ?? ' border-transparent'} ${readOnly ? 'pointer-events-none' : ''}`}\n        {...{ placeholder, readOnly, autoFocus, type }}\n        {...register}\n      />\n      <span className='text-[13px] text-red-400'>{error?.message?.toString()}</span>\n    </div>\n  );\n};\n\nexport default InputWithValidation;\n\ntype Props = {\n  register: UseFormRegisterReturn;\n  error: FieldError;\n  placeholder?: string;\n  label: string;\n  defaultValue?: string;\n  readOnly?: boolean;\n  autoFocus?: boolean;\n  darkEnabled?: boolean;\n  inputClass?: string;\n  type?: string;\n};\n","const Item = ({ text, icon, className }: { text: string; icon?: string; className: string }) => (\n  <div className='flex items-center font-normal truncate text-c-1'>\n    {icon !== undefined &&\n      (icon ? (\n        <img src={icon} alt={text} className={className} />\n      ) : (\n        <div className='bg-amber-800 text-white grid place-items-center w-5 h-5 mr-2 rounded-full'>\n          {text.slice(0, 1).toUpperCase()}\n        </div>\n      ))}\n    {text}\n  </div>\n);\n\nexport default Item;\n","import { motion } from 'framer-motion';\nimport { createPortal } from 'react-dom';\n\ninterface Props {\n  children: JSX.Element;\n  className?: string;\n  onClose: () => void;\n  onSubmit?: () => Promise<void>;\n  isLoading?: boolean;\n}\n\nconst Model = (props: Props) => {\n  const { onClose, onSubmit, isLoading, children: ModelBody, className } = props;\n\n  return createPortal(\n    <div\n      onClick={onClose}\n      className='fixed top-0 left-0 w-screen h-screen bg-[#0d67cc40] overflow-auto z-20 grid place-items-center'\n    >\n      <motion.div\n        className={`rounded-[4px] bg-white p-6 w-[90%] my-8 ${className ?? 'max-w-[31rem]'}`}\n        initial={{ scale: 0.9 }}\n        animate={{ scale: 1 }}\n        onClick={(e) => e.stopPropagation()}\n      >\n        {ModelBody}\n        {onSubmit && (\n          <div className='flex justify-end mt-8 gap-x-3'>\n            <button onClick={onClose} className='px-3 py-1 rounded-[3px] text-c-1 hover:bg-c-3'>\n              cancel\n            </button>\n            <button onClick={onSubmit} className='btn'>\n              {isLoading ? 'creating ...' : 'Create'}\n            </button>\n          </div>\n        )}\n      </motion.div>\n    </div>,\n    document.getElementById('portal') as Element\n  );\n};\n\nexport default Model;\n","type Props = {\n  label: string;\n  labelClass?: string;\n  children: JSX.Element;\n  margin?: string;\n};\n\nconst WithLabel = (props: Props) => {\n  const { label, margin, labelClass, children: Children } = props;\n  return (\n    <div className={margin ?? 'mt-5'}>\n      {label && (\n        <span className={'font-medium text-[14px] text-c-1 mb-2 block ' + labelClass}>{label}</span>\n      )}\n      {Children}\n    </div>\n  );\n};\n\nexport default WithLabel;\n"],"names":["extendedApi","api","endpoints","builder","authUser","query","url","credentials","providesTags","publicUser","id","updateAuthUser","mutation","body","method","invalidatesTags","overrideExisting","useAuthUserQuery","useUpdateAuthUserMutation","usePublicUserQuery","selectAuthUser","undefined","selectFromResult","data","axiosDf","axios","baseURL","withCredentials","members","projectId","removeMember","addMember","useMembersQuery","useRemoveMemberMutation","useAddMemberMutation","selectMembers","projects","userId","project","createProject","deleteProject","leaveProject","updateProject","onQueryStarted","newData","dispatch","util","updateQueryData","oldData","useProjectsQuery","useProjectQuery","useCreateProjectMutation","useUpdateProjectMutation","useLeaveProjectMutation","useDeleteProjectMutation","selectCurrentProject","fragments","useLocation","pathname","slice","split","Number","className","spacing","separator","icon","to","name","isCurrentPage","text","iconSize","width","useParams","useState","on","setOn","skip","motion","initial","animate","transition","type","title","onClick","p","props","onClose","useForm","register","handleSubmit","formState","errors","isLoading","isSubmitting","handleCreateProject","form","Model","onSubmit","InputWithValidation","label","placeholder","required","value","message","error","autoFocus","descr","repo","WithLabel","Item","username","profileUrl","DeleteProject","lazy","idx","authUserId","navigate","useNavigate","filter","isAdmin","memberId","e","stopPropagation","Suspense","isOpen","setIsOpen","status","console","log","size","minW","w","children","length","map","i","Profile","mode","theme","toggleTheme","handleLogOut","logOut","src","alt","isChecked","onChange","localStorage","setItem","JSON","stringify","cursor","border","_hover","borderColor","result","outlet","useOutlet","darkEnabled","defaultValue","readOnly","inputClass","toString","toUpperCase","ModelBody","createPortal","scale","document","getElementById","margin","labelClass","Children"],"sourceRoot":""}