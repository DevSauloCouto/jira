{"version":3,"file":"static/js/242.1f437564.chunk.js","mappings":"+MAoEA,SAEeA,EAAAA,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,KAAAA,MAAf,WAAyBC,GAAzB,4FACuBC,EAAAA,EAAAA,IAAY,iBAAkBD,GADrD,cACQE,EADR,yBAESA,EAAOC,MAFhB,kEAFA,UA5DA,WACE,OAIIC,EAAAA,EAAAA,MAHFC,EADF,EACEA,SACAC,EAFF,EAEEA,aAFF,IAGEC,UAAaC,EAHf,EAGeA,OAAsBC,EAHrC,EAGuBC,aAA2CC,EAHlE,EAG8CC,mBAE9C,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAe,yCAAG,WAAOC,GAAP,qGAEdlB,EAAUkB,GAFI,OAGpBF,EAAS,IAHW,+CAKpBA,GAAS,QAAE,EAAD,KAAsBG,gBAAvB,aAAC,EAAgCf,MAAkBgB,SALxC,wDAAH,sDASrB,OACE,iCACE,eAAIC,UAAU,6BAAd,6BACCT,IAAYG,GACX,gBAAKM,UAAU,kFAAf,yDAIA,iCACE,iBAAKA,UAAU,uCAAf,WACE,SAAC,IAAD,CACEC,MAAM,eACNC,YAAY,0BACZjB,SAAUA,EAAS,SAAU,CAC3BkB,SAAU,CAAEC,OAAO,EAAML,QAAS,gCAEpCL,MAAON,EAAOiB,OACdC,aAAW,EACXC,KAAK,cAEP,SAAC,IAAD,CACEN,MAAM,eACNC,YAAY,0BACZjB,SAAUA,EAAS,SAAU,CAC3BkB,SAAU,CAAEC,OAAO,EAAML,QAAS,8BAClCS,UAAW,CAAEJ,MAAO,EAAGL,QAAS,sCAChCU,UAAW,CAAEL,MAAO,GAAIL,QAAS,iCAEnCL,MAAON,EAAOsB,OACdJ,aAAW,EACXC,KAAK,gBAGRb,IAAS,iBAAMM,UAAU,oCAAhB,SAAqDN,KAC/D,mBAAQiB,QAASzB,EAAaU,GAAkBI,UAAU,kBAA1D,SACGX,EAAU,iBAAmB,gBAMzC,C","sources":["components/home/ChangePwd.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { FieldError, FieldValues, useForm } from 'react-hook-form';\nimport type { AxiosError } from 'axios';\nimport InputWithValidation from '../util/InputWithValidation';\nimport axiosDf from '../../api/axios';\n\ntype APIERROR = { message: string };\n\nfunction ChangePwd() {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, isSubmitting: loading, isSubmitSuccessful: success },\n  } = useForm();\n  const [error, setError] = useState('');\n\n  const handleChangePwd = async (form: FieldValues) => {\n    try {\n      await changePwd(form);\n      setError('');\n    } catch (error) {\n      setError(((error as AxiosError).response?.data as APIERROR).message);\n    }\n  };\n\n  return (\n    <>\n      <h2 className='text-c-text mt-10 text-2xl'>Change Password</h2>\n      {success && !error ? (\n        <div className='grid place-items-center font-semibold h-40 mt-5 text-c-text text-xl text-center'>\n          Password changed successfully ðŸš€\n        </div>\n      ) : (\n        <>\n          <div className='flex flex-col mt-5 gap-4 w-[16.5rem]'>\n            <InputWithValidation\n              label='Old password'\n              placeholder='enter your old password'\n              register={register('oldPwd', {\n                required: { value: true, message: 'password must not be empty' },\n              })}\n              error={errors.oldPwd as FieldError}\n              darkEnabled\n              type='password'\n            />\n            <InputWithValidation\n              label='New password'\n              placeholder='enter your old password'\n              register={register('newPwd', {\n                required: { value: true, message: 'password must not be empty' },\n                minLength: { value: 4, message: 'must be at least 4 characters long' },\n                maxLength: { value: 14, message: 'must be under 15 characters' },\n              })}\n              error={errors.newPwd as FieldError}\n              darkEnabled\n              type='password'\n            />\n          </div>\n          {error && <span className='text-red-400 block mt-4 text-left'>{error}</span>}\n          <button onClick={handleSubmit(handleChangePwd)} className='btn w-full mt-8'>\n            {loading ? 'proceeding ...' : 'Change'}\n          </button>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default ChangePwd;\n\nasync function changePwd(body: FieldValues) {\n  const result = await axiosDf.put('auth/changePwd', body);\n  return result.data;\n}\n"],"names":["changePwd","body","axiosDf","result","data","useForm","register","handleSubmit","formState","errors","loading","isSubmitting","success","isSubmitSuccessful","useState","error","setError","handleChangePwd","form","response","message","className","label","placeholder","required","value","oldPwd","darkEnabled","type","minLength","maxLength","newPwd","onClick"],"sourceRoot":""}